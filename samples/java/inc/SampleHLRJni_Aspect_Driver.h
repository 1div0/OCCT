/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class SampleHLRJni_Aspect_0005fDriver */

#ifndef _Included_SampleHLRJni_Aspect_0005fDriver
#define _Included_SampleHLRJni_Aspect_0005fDriver
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: myCasLock */
/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    Aspect_Driver_Convert_1
 * Signature: (I)D
 */
JNIEXPORT jdouble JNICALL Java_SampleHLRJni_Aspect_1Driver_Aspect_1Driver_1Convert_11
  (JNIEnv *, jobject, jint);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    Aspect_Driver_Convert_2
 * Signature: (D)I
 */
JNIEXPORT jint JNICALL Java_SampleHLRJni_Aspect_1Driver_Aspect_1Driver_1Convert_12
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    Aspect_Driver_Convert_3
 * Signature: (IILjcas/Standard_Real;Ljcas/Standard_Real;)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_Aspect_1Driver_1Convert_13
  (JNIEnv *, jobject, jint, jint, jobject, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    Aspect_Driver_Convert_4
 * Signature: (DDLjcas/Standard_Integer;Ljcas/Standard_Integer;)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_Aspect_1Driver_1Convert_14
  (JNIEnv *, jobject, jdouble, jdouble, jobject, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    Aspect_Driver_SetTextAttrib_1
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_Aspect_1Driver_1SetTextAttrib_11
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    Aspect_Driver_SetTextAttrib_2
 * Signature: (IIDDDZ)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_Aspect_1Driver_1SetTextAttrib_12
  (JNIEnv *, jobject, jint, jint, jdouble, jdouble, jdouble, jboolean);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    BeginArcs
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_BeginArcs
  (JNIEnv *, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    BeginMarkers
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_BeginMarkers
  (JNIEnv *, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    BeginPoints
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_BeginPoints
  (JNIEnv *, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    BeginPolyArcs
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_BeginPolyArcs
  (JNIEnv *, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    BeginPolygon
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_BeginPolygon
  (JNIEnv *, jobject, jint);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    BeginPolyline
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_BeginPolyline
  (JNIEnv *, jobject, jint);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    BeginSegments
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_BeginSegments
  (JNIEnv *, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    ClearImage
 * Signature: (LSampleHLRJni/Standard_Transient;)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_ClearImage
  (JNIEnv *, jobject, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    ClearImageFile
 * Signature: (Ljcas/Standard_CString;)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_ClearImageFile
  (JNIEnv *, jobject, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    ClosePrimitive
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_ClosePrimitive
  (JNIEnv *, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    ColorMap
 * Signature: ()LSampleHLRJni/Aspect_ColorMap;
 */
JNIEXPORT jobject JNICALL Java_SampleHLRJni_Aspect_1Driver_ColorMap
  (JNIEnv *, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    DrawArc
 * Signature: (FFFFFF)Z
 */
JNIEXPORT jboolean JNICALL Java_SampleHLRJni_Aspect_1Driver_DrawArc
  (JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    DrawImage
 * Signature: (LSampleHLRJni/Standard_Transient;FF)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_DrawImage
  (JNIEnv *, jobject, jobject, jfloat, jfloat);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    DrawImageFile
 * Signature: (Ljcas/Standard_CString;FFD)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_DrawImageFile
  (JNIEnv *, jobject, jobject, jfloat, jfloat, jdouble);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    DrawMarker
 * Signature: (IFFFFF)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_DrawMarker
  (JNIEnv *, jobject, jint, jfloat, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    DrawPoint
 * Signature: (FF)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_DrawPoint
  (JNIEnv *, jobject, jfloat, jfloat);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    DrawPolyArc
 * Signature: (FFFFFF)Z
 */
JNIEXPORT jboolean JNICALL Java_SampleHLRJni_Aspect_1Driver_DrawPolyArc
  (JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    DrawPolyText
 * Signature: (LSampleHLRJni/TCollection_ExtendedString;FFDFS)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_DrawPolyText
  (JNIEnv *, jobject, jobject, jfloat, jfloat, jdouble, jfloat, jshort);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    DrawPolygon
 * Signature: (LSampleHLRJni/TShort_Array1OfShortReal;LSampleHLRJni/TShort_Array1OfShortReal;)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_DrawPolygon
  (JNIEnv *, jobject, jobject, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    DrawPolyline
 * Signature: (LSampleHLRJni/TShort_Array1OfShortReal;LSampleHLRJni/TShort_Array1OfShortReal;)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_DrawPolyline
  (JNIEnv *, jobject, jobject, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    DrawSegment
 * Signature: (FFFF)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_DrawSegment
  (JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    DrawText
 * Signature: (LSampleHLRJni/TCollection_ExtendedString;FFFS)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_DrawText
  (JNIEnv *, jobject, jobject, jfloat, jfloat, jfloat, jshort);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    EndDraw
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_EndDraw
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    FontMap
 * Signature: ()LSampleHLRJni/Aspect_FontMap;
 */
JNIEXPORT jobject JNICALL Java_SampleHLRJni_Aspect_1Driver_FontMap
  (JNIEnv *, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    IsKnownImage
 * Signature: (LSampleHLRJni/Standard_Transient;)Z
 */
JNIEXPORT jboolean JNICALL Java_SampleHLRJni_Aspect_1Driver_IsKnownImage
  (JNIEnv *, jobject, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    MarkMap
 * Signature: ()LSampleHLRJni/Aspect_MarkMap;
 */
JNIEXPORT jobject JNICALL Java_SampleHLRJni_Aspect_1Driver_MarkMap
  (JNIEnv *, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    SetColorMap
 * Signature: (LSampleHLRJni/Aspect_ColorMap;)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_SetColorMap
  (JNIEnv *, jobject, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    SetFontMap
 * Signature: (LSampleHLRJni/Aspect_FontMap;Z)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_SetFontMap
  (JNIEnv *, jobject, jobject, jboolean);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    SetLineAttrib
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_SetLineAttrib
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    SetMarkMap
 * Signature: (LSampleHLRJni/Aspect_MarkMap;)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_SetMarkMap
  (JNIEnv *, jobject, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    SetMarkerAttrib
 * Signature: (IIZ)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_SetMarkerAttrib
  (JNIEnv *, jobject, jint, jint, jboolean);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    SetPolyAttrib
 * Signature: (IIZ)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_SetPolyAttrib
  (JNIEnv *, jobject, jint, jint, jboolean);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    SetTypeMap
 * Signature: (LSampleHLRJni/Aspect_TypeMap;)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_SetTypeMap
  (JNIEnv *, jobject, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    SetWidthMap
 * Signature: (LSampleHLRJni/Aspect_WidthMap;)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_SetWidthMap
  (JNIEnv *, jobject, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    SizeOfImageFile
 * Signature: (Ljcas/Standard_CString;Ljcas/Standard_Integer;Ljcas/Standard_Integer;)Z
 */
JNIEXPORT jboolean JNICALL Java_SampleHLRJni_Aspect_1Driver_SizeOfImageFile
  (JNIEnv *, jobject, jobject, jobject, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    TypeMap
 * Signature: ()LSampleHLRJni/Aspect_TypeMap;
 */
JNIEXPORT jobject JNICALL Java_SampleHLRJni_Aspect_1Driver_TypeMap
  (JNIEnv *, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    UseMFT
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_SampleHLRJni_Aspect_1Driver_UseMFT
  (JNIEnv *, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    WidthMap
 * Signature: ()LSampleHLRJni/Aspect_WidthMap;
 */
JNIEXPORT jobject JNICALL Java_SampleHLRJni_Aspect_1Driver_WidthMap
  (JNIEnv *, jobject);

/*
 * Class:     SampleHLRJni_Aspect_0005fDriver
 * Method:    WorkSpace
 * Signature: (Ljcas/Standard_Real;Ljcas/Standard_Real;)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_Aspect_1Driver_WorkSpace
  (JNIEnv *, jobject, jobject, jobject);

#ifdef __cplusplus
}
#endif
#endif
