// File generated by CPPExt (Value)
//                     Copyright (C) 1991,1995 by
//  
//                      MATRA DATAVISION, FRANCE
//  
// This software is furnished in accordance with the terms and conditions
// of the contract and with the inclusion of the above copyright notice.
// This software or any other copy thereof may not be provided or otherwise
// be made available to any other person. No title to an ownership of the
// software is hereby transferred.
//  
// At the termination of the contract, the software and all copies of this
// software must be deleted.

#ifndef _SampleAISDisplayModePackage_HeaderFile
#define _SampleAISDisplayModePackage_HeaderFile

#ifndef _Handle_V3d_Viewer_HeaderFile
#include <Handle_V3d_Viewer.hxx>
#endif
#ifndef _Standard_ExtString_HeaderFile
#include <Standard_ExtString.hxx>
#endif
#ifndef _Handle_V3d_View_HeaderFile
#include <Handle_V3d_View.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_AIS_InteractiveContext_HeaderFile
#include <Handle_AIS_InteractiveContext.hxx>
#endif
#ifndef _AIS_DisplayMode_HeaderFile
#include <AIS_DisplayMode.hxx>
#endif
#ifndef _Graphic3d_NameOfMaterial_HeaderFile
#include <Graphic3d_NameOfMaterial.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
class V3d_Viewer;
class V3d_View;
class AIS_InteractiveContext;
class TCollection_AsciiString;
class Quantity_Color;


#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

class SampleAISDisplayModePackage  {

public:

    void* operator new(size_t,void* anAddress) 
      {
        return anAddress;
      }
    void* operator new(size_t size) 
      { 
        return Standard::Allocate(size); 
      }
    void  operator delete(void *anAddress) 
      { 
        if (anAddress) Standard::Free((Standard_Address&)anAddress); 
      }
 // Methods PUBLIC
 // 
Standard_EXPORT static  Handle_V3d_Viewer CreateViewer(const Standard_ExtString aName) ;
Standard_EXPORT static  void SetWindow(const Handle(V3d_View)& aView,const Standard_Integer hiwin,const Standard_Integer lowin) ;
Standard_EXPORT static  void DisplayBox(const Handle(AIS_InteractiveContext)& aContext,TCollection_AsciiString& Message) ;
Standard_EXPORT static  void DisplaySphere(const Handle(AIS_InteractiveContext)& aContext,TCollection_AsciiString& Message) ;
Standard_EXPORT static  void DisplayCylinder(const Handle(AIS_InteractiveContext)& aContext,TCollection_AsciiString& Message) ;
Standard_EXPORT static  void EraseAll(const Handle(AIS_InteractiveContext)& aContext,TCollection_AsciiString& Message) ;
Standard_EXPORT static  void InitContext(const Handle(AIS_InteractiveContext)& aContext) ;
Standard_EXPORT static  void GetIsosNumber(const Handle(AIS_InteractiveContext)& aContext,Standard_Integer& u,Standard_Integer& v) ;
Standard_EXPORT static  void SetIsosNumber(const Handle(AIS_InteractiveContext)& aContext,const Standard_Integer u,const Standard_Integer v,TCollection_AsciiString& Message) ;
Standard_EXPORT static  void SetDisplayMode(const Handle(AIS_InteractiveContext)& aContext,const AIS_DisplayMode aMode,TCollection_AsciiString& Message) ;
Standard_EXPORT static  void SetObjectDisplayMode(const Handle(AIS_InteractiveContext)& aContext,const AIS_DisplayMode aMode,TCollection_AsciiString& Message) ;
Standard_EXPORT static  void SetObjectMaterial(const Handle(AIS_InteractiveContext)& aContext,const Graphic3d_NameOfMaterial aName,TCollection_AsciiString& Message) ;
Standard_EXPORT static  Quantity_Color GetObjectColor(const Handle(AIS_InteractiveContext)& aContext) ;
Standard_EXPORT static  void SetObjectColor(const Handle(AIS_InteractiveContext)& aContext,const Quantity_Color& aColor,TCollection_AsciiString& Message) ;
Standard_EXPORT static  Standard_Real GetObjectTransparency(const Handle(AIS_InteractiveContext)& aContext) ;
Standard_EXPORT static  void SetObjectTransparency(const Handle(AIS_InteractiveContext)& aContext,const Standard_Real aValue,TCollection_AsciiString& Message) ;
Standard_EXPORT static  void CreateLight(const Handle(AIS_InteractiveContext)& aContext) ;
Standard_EXPORT static  void SetFirstPointOfLight(const Handle(AIS_InteractiveContext)& aContext,const Handle(V3d_View)& aView,const Standard_Integer X,const Standard_Integer Y) ;
Standard_EXPORT static  void MoveSecondPointOfLight(const Handle(AIS_InteractiveContext)& aContext,const Handle(V3d_View)& aView,const Standard_Integer X,const Standard_Integer Y) ;
Standard_EXPORT static  void SetSecondPointOfLight(const Handle(AIS_InteractiveContext)& aContext) ;





protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 


 // Fields PRIVATE
 //


};





// other Inline functions and methods (like "C++: function call" methods)
//


#endif
