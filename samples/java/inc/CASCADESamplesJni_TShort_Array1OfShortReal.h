/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class CASCADESamplesJni_TShort_0005fArray1OfShortReal */

#ifndef _Included_CASCADESamplesJni_TShort_0005fArray1OfShortReal
#define _Included_CASCADESamplesJni_TShort_0005fArray1OfShortReal
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: myCasLock */
/*
 * Class:     CASCADESamplesJni_TShort_0005fArray1OfShortReal
 * Method:    Assign
 * Signature: (LCASCADESamplesJni/TShort_Array1OfShortReal;)LCASCADESamplesJni/TShort_Array1OfShortReal;
 */
JNIEXPORT jobject JNICALL Java_CASCADESamplesJni_TShort_1Array1OfShortReal_Assign
  (JNIEnv *, jobject, jobject);

/*
 * Class:     CASCADESamplesJni_TShort_0005fArray1OfShortReal
 * Method:    ChangeValue
 * Signature: (I)F
 */
JNIEXPORT jfloat JNICALL Java_CASCADESamplesJni_TShort_1Array1OfShortReal_ChangeValue
  (JNIEnv *, jobject, jint);

/*
 * Class:     CASCADESamplesJni_TShort_0005fArray1OfShortReal
 * Method:    Destroy
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_CASCADESamplesJni_TShort_1Array1OfShortReal_Destroy
  (JNIEnv *, jobject);

/*
 * Class:     CASCADESamplesJni_TShort_0005fArray1OfShortReal
 * Method:    FinalizeValue
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_CASCADESamplesJni_TShort_1Array1OfShortReal_FinalizeValue
  (JNIEnv *, jclass, jlong);

/*
 * Class:     CASCADESamplesJni_TShort_0005fArray1OfShortReal
 * Method:    Init
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_CASCADESamplesJni_TShort_1Array1OfShortReal_Init
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     CASCADESamplesJni_TShort_0005fArray1OfShortReal
 * Method:    IsAllocated
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_CASCADESamplesJni_TShort_1Array1OfShortReal_IsAllocated
  (JNIEnv *, jobject);

/*
 * Class:     CASCADESamplesJni_TShort_0005fArray1OfShortReal
 * Method:    Length
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_CASCADESamplesJni_TShort_1Array1OfShortReal_Length
  (JNIEnv *, jobject);

/*
 * Class:     CASCADESamplesJni_TShort_0005fArray1OfShortReal
 * Method:    Lower
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_CASCADESamplesJni_TShort_1Array1OfShortReal_Lower
  (JNIEnv *, jobject);

/*
 * Class:     CASCADESamplesJni_TShort_0005fArray1OfShortReal
 * Method:    SetValue
 * Signature: (IF)V
 */
JNIEXPORT void JNICALL Java_CASCADESamplesJni_TShort_1Array1OfShortReal_SetValue
  (JNIEnv *, jobject, jint, jfloat);

/*
 * Class:     CASCADESamplesJni_TShort_0005fArray1OfShortReal
 * Method:    TShort_Array1OfShortReal_Create_1
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_CASCADESamplesJni_TShort_1Array1OfShortReal_TShort_1Array1OfShortReal_1Create_11
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     CASCADESamplesJni_TShort_0005fArray1OfShortReal
 * Method:    TShort_Array1OfShortReal_Create_2
 * Signature: (FII)V
 */
JNIEXPORT void JNICALL Java_CASCADESamplesJni_TShort_1Array1OfShortReal_TShort_1Array1OfShortReal_1Create_12
  (JNIEnv *, jobject, jfloat, jint, jint);

/*
 * Class:     CASCADESamplesJni_TShort_0005fArray1OfShortReal
 * Method:    Upper
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_CASCADESamplesJni_TShort_1Array1OfShortReal_Upper
  (JNIEnv *, jobject);

/*
 * Class:     CASCADESamplesJni_TShort_0005fArray1OfShortReal
 * Method:    Value
 * Signature: (I)F
 */
JNIEXPORT jfloat JNICALL Java_CASCADESamplesJni_TShort_1Array1OfShortReal_Value
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
