// File generated by CPPExt (Transient)
//
//                     Copyright (C) 1991,1995 by
//  
//                      MATRA DATAVISION, FRANCE
//  
// This software is furnished in accordance with the terms and conditions
// of the contract and with the inclusion of the above copyright notice.
// This software or any other copy thereof may not be provided or otherwise
// be made available to any other person. No title to an ownership of the
// software is hereby transferred.
//  
// At the termination of the contract, the software and all copies of this
// software must be deleted.
//
#ifndef _ISession2D_ObjectOwner_HeaderFile
#define _ISession2D_ObjectOwner_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Handle_ISession2D_ObjectOwner_HeaderFile
#include <Handle_ISession2D_ObjectOwner.hxx>
#endif

#ifndef _Handle_Graphic2d_GraphicObject_HeaderFile
#include <Handle_Graphic2d_GraphicObject.hxx>
#endif
#ifndef _TCollection_AsciiString_HeaderFile
#include <TCollection_AsciiString.hxx>
#endif
#ifndef _SelectMgr_EntityOwner_HeaderFile
#include <SelectMgr_EntityOwner.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_SelectMgr_SelectableObject_HeaderFile
#include <Handle_SelectMgr_SelectableObject.hxx>
#endif
#ifndef _Handle_PrsMgr_PresentationManager_HeaderFile
#include <Handle_PrsMgr_PresentationManager.hxx>
#endif
class Graphic2d_GraphicObject;
class SelectMgr_SelectableObject;
class PrsMgr_PresentationManager;
class TCollection_AsciiString;


class ISession2D_ObjectOwner : public SelectMgr_EntityOwner {

public:

    void* operator new(size_t,void* anAddress) 
      {
        return anAddress;
      }
    void* operator new(size_t size) 
      { 
        return Standard::Allocate(size); 
      }
    void  operator delete(void *anAddress) 
      { 
        if (anAddress) Standard::Free((Standard_Address&)anAddress); 
      }
 // Methods PUBLIC
 // 
Standard_EXPORT ISession2D_ObjectOwner(const Standard_Integer aPriority = 0);
Standard_EXPORT ISession2D_ObjectOwner(const Handle(SelectMgr_SelectableObject)& aSO,const Standard_Integer aPriority = 0);
Standard_EXPORT virtual  void Hilight(const Handle(PrsMgr_PresentationManager)& aPM,const Standard_Integer aMode = 0) ;
Standard_EXPORT virtual  void Unhilight(const Handle(PrsMgr_PresentationManager)& aPM,const Standard_Integer aMode = 0) ;
Standard_EXPORT   void SetDumpMessage(const TCollection_AsciiString& aNewDumpMessage) ;
Standard_EXPORT   TCollection_AsciiString DumpMessage() const;
Standard_EXPORT ~ISession2D_ObjectOwner();




 // Type management
 //
 Standard_EXPORT friend Handle_Standard_Type& ISession2D_ObjectOwner_Type_();
 Standard_EXPORT const Handle(Standard_Type)& DynamicType() const;
 Standard_EXPORT Standard_Boolean	       IsKind(const Handle(Standard_Type)&) const;

protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 


 // Fields PRIVATE
 //
Handle_Graphic2d_GraphicObject myGo;
TCollection_AsciiString myDumpMessage;


};


#include <ISession2D_ObjectOwner.lxx>



// other Inline functions and methods (like "C++: function call" methods)
//


#endif
