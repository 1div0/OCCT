/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class SampleHLRJni_TColStd_0005fArray1OfBoolean */

#ifndef _Included_SampleHLRJni_TColStd_0005fArray1OfBoolean
#define _Included_SampleHLRJni_TColStd_0005fArray1OfBoolean
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: myCasLock */
/*
 * Class:     SampleHLRJni_TColStd_0005fArray1OfBoolean
 * Method:    Assign
 * Signature: (LSampleHLRJni/TColStd_Array1OfBoolean;)LSampleHLRJni/TColStd_Array1OfBoolean;
 */
JNIEXPORT jobject JNICALL Java_SampleHLRJni_TColStd_1Array1OfBoolean_Assign
  (JNIEnv *, jobject, jobject);

/*
 * Class:     SampleHLRJni_TColStd_0005fArray1OfBoolean
 * Method:    ChangeValue
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_SampleHLRJni_TColStd_1Array1OfBoolean_ChangeValue
  (JNIEnv *, jobject, jint);

/*
 * Class:     SampleHLRJni_TColStd_0005fArray1OfBoolean
 * Method:    Destroy
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_TColStd_1Array1OfBoolean_Destroy
  (JNIEnv *, jobject);

/*
 * Class:     SampleHLRJni_TColStd_0005fArray1OfBoolean
 * Method:    FinalizeValue
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_TColStd_1Array1OfBoolean_FinalizeValue
  (JNIEnv *, jclass, jlong);

/*
 * Class:     SampleHLRJni_TColStd_0005fArray1OfBoolean
 * Method:    Init
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_TColStd_1Array1OfBoolean_Init
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     SampleHLRJni_TColStd_0005fArray1OfBoolean
 * Method:    IsAllocated
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_SampleHLRJni_TColStd_1Array1OfBoolean_IsAllocated
  (JNIEnv *, jobject);

/*
 * Class:     SampleHLRJni_TColStd_0005fArray1OfBoolean
 * Method:    Length
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_SampleHLRJni_TColStd_1Array1OfBoolean_Length
  (JNIEnv *, jobject);

/*
 * Class:     SampleHLRJni_TColStd_0005fArray1OfBoolean
 * Method:    Lower
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_SampleHLRJni_TColStd_1Array1OfBoolean_Lower
  (JNIEnv *, jobject);

/*
 * Class:     SampleHLRJni_TColStd_0005fArray1OfBoolean
 * Method:    SetValue
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_TColStd_1Array1OfBoolean_SetValue
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     SampleHLRJni_TColStd_0005fArray1OfBoolean
 * Method:    TColStd_Array1OfBoolean_Create_1
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_TColStd_1Array1OfBoolean_TColStd_1Array1OfBoolean_1Create_11
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     SampleHLRJni_TColStd_0005fArray1OfBoolean
 * Method:    TColStd_Array1OfBoolean_Create_2
 * Signature: (ZII)V
 */
JNIEXPORT void JNICALL Java_SampleHLRJni_TColStd_1Array1OfBoolean_TColStd_1Array1OfBoolean_1Create_12
  (JNIEnv *, jobject, jboolean, jint, jint);

/*
 * Class:     SampleHLRJni_TColStd_0005fArray1OfBoolean
 * Method:    Upper
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_SampleHLRJni_TColStd_1Array1OfBoolean_Upper
  (JNIEnv *, jobject);

/*
 * Class:     SampleHLRJni_TColStd_0005fArray1OfBoolean
 * Method:    Value
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_SampleHLRJni_TColStd_1Array1OfBoolean_Value
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
