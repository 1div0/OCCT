inline  Standard_Integer ISession2D_Curve::NbPossibleSelection() 
{
  return 1;
}

 
inline  Aspect_TypeOfLine ISession2D_Curve::GetTypeOfLine() 
{
  return myTypeOfLine;
}

 
inline  void ISession2D_Curve::SetTypeOfLine(const Aspect_TypeOfLine aNewTypeOfLine) 
{
  myTypeOfLine = aNewTypeOfLine;
}

 
inline  Aspect_WidthOfLine ISession2D_Curve::GetWidthOfLine() 
{
  return myWidthOfLine;
}

 
inline  void ISession2D_Curve::SetWidthOfLine(const Aspect_WidthOfLine aNewWidthOfLine) 
{
  myWidthOfLine = aNewWidthOfLine;
}

 
inline  Standard_Integer ISession2D_Curve::GetColorIndex() 
{
  return myColorIndex;
}

 
inline  void ISession2D_Curve::SetColorIndex(const Standard_Integer aNewColorIndex) 
{
  myColorIndex = aNewColorIndex;
}

 
inline  Standard_Boolean ISession2D_Curve::GetDisplayPole() 
{
  return myDisplayPole;
}

 
inline  void ISession2D_Curve::SetDisplayPole(const Standard_Boolean aNewDisplayPole) 
{
  myDisplayPole = aNewDisplayPole;
}

 
inline  Standard_Boolean ISession2D_Curve::GetDisplayCurbure() 
{
  return myDisplayCurbure;
}

 
inline  void ISession2D_Curve::SetDisplayCurbure(const Standard_Boolean aNewDisplayCurbure) 
{
  myDisplayCurbure = aNewDisplayCurbure;
}

 
inline  Standard_Real ISession2D_Curve::GetDiscretisation() 
{
  return myDiscretisation;
}

 
inline  void ISession2D_Curve::SetDiscretisation(const Standard_Real aNewDiscretisation) 
{
  myDiscretisation = aNewDiscretisation;
}

 
