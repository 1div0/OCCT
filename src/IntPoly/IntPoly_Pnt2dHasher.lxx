// Created on: 1995-07-20
// Created by: Stagiaire Alain JOURDAIN
// Copyright (c) 1995-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and / or modify it
// under the terms of the GNU Lesser General Public version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

#include <IntPoly_IndexedMapOfPnt2d.hxx>
#include <gp_Pnt2d.hxx>
#include <TColStd_MapRealHasher.hxx>
#include <Precision.hxx>

//=======================================================================
//function : HashCode
//purpose  : 
//=======================================================================

inline Standard_Integer IntPoly_Pnt2dHasher::HashCode(const gp_Pnt2d& Point,
						      const Standard_Integer upper)
{
  return TColStd_MapRealHasher::HashCode(Point.X()+Point.Y(),upper);
}


//=======================================================================
//function : IsEqual
//purpose  : 
//=======================================================================

inline Standard_Boolean IntPoly_Pnt2dHasher::IsEqual(const gp_Pnt2d& Point1,
						     const gp_Pnt2d& Point2)
{
  return ((Point1.X() == Point2.X()) && (Point1.Y() == Point2.Y()));
}
