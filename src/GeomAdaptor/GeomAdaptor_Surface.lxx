// File:      GeomAdaptor_Surface.lxx
// Created:   Tue May 18 16:12:12 1993
// Author:    Bruno DUMORTIER
// Copyright: OPEN CASCADE 1993

#include <Geom_Surface.hxx>
#include <Standard_NullObject.hxx>
#include <Standard_ConstructionError.hxx>

//=======================================================================
//function : GeomAdaptor_Surface
//purpose  : 
//=======================================================================

inline GeomAdaptor_Surface::GeomAdaptor_Surface()
 : mySurfaceType(GeomAbs_OtherSurface), 
   myUFirst(0.),
   myULast(0.),
   myVFirst(0.),
   myVLast (0.),
   myTolU(0.), 
   myTolV(0.)
{
} 

//=======================================================================
//function : GeomAdaptor_Surface
//purpose  : 
//=======================================================================

inline GeomAdaptor_Surface::GeomAdaptor_Surface(const Handle(Geom_Surface)& S)
 : myTolU(0.), myTolV(0.)
{
  Load(S);
}

//=======================================================================
//function : GeomAdaptor_Surface
//purpose  : 
//=======================================================================

inline GeomAdaptor_Surface::GeomAdaptor_Surface(const Handle(Geom_Surface)& S,
                                                const Standard_Real UFirst,
                                                const Standard_Real ULast,
                                                const Standard_Real VFirst,
                                                const Standard_Real VLast,
                                                const Standard_Real TolU,
                                                const Standard_Real TolV)
{
  Load(S,UFirst,ULast,VFirst,VLast,TolU,TolV);
}

//=======================================================================
//function : Load
//purpose  : 
//=======================================================================

inline void GeomAdaptor_Surface::Load(const Handle(Geom_Surface)& S)
{
  if ( S.IsNull()) Standard_NullObject::Raise("GeomAdaptor_Surface::Load");

  Standard_Real U1,U2,V1,V2;
  S->Bounds(U1,U2,V1,V2);
  load(S,U1,U2,V1,V2);
}

//=======================================================================
//function : Load
//purpose  : 
//=======================================================================

inline void GeomAdaptor_Surface::Load(const Handle(Geom_Surface)& S,
                               const Standard_Real UFirst,
                               const Standard_Real ULast,
                               const Standard_Real VFirst,
                               const Standard_Real VLast,
                               const Standard_Real TolU,
                               const Standard_Real TolV)
{
  if ( S.IsNull()) Standard_NullObject::Raise("GeomAdaptor_Surface::Load");

  if(UFirst>ULast || VFirst>VLast)
    Standard_ConstructionError::Raise("GeomAdaptor_Surface::Load");

  load(S,UFirst,ULast,VFirst,VLast,TolU,TolV);
}


//=======================================================================
//function : Surface
//purpose  : 
//=======================================================================

inline const Handle(Geom_Surface)& GeomAdaptor_Surface::Surface() const {
  return mySurface;
}

//=======================================================================
//function : FirstUParameter
//purpose  : 
//=======================================================================

inline Standard_Real GeomAdaptor_Surface::FirstUParameter() const {
  return myUFirst;
}

//=======================================================================
//function : LastUParameter
//purpose  : 
//=======================================================================

inline Standard_Real GeomAdaptor_Surface::LastUParameter() const {
  return myULast;
}

//=======================================================================
//function : FirstVParameter
//purpose  : 
//=======================================================================

inline Standard_Real GeomAdaptor_Surface::FirstVParameter() const {
  return myVFirst;
}

//=======================================================================
//function : LastVParameter
//purpose  : 
//=======================================================================

inline Standard_Real GeomAdaptor_Surface::LastVParameter() const {
  return myVLast;
}

//=======================================================================
//function : GetType
//purpose  : 
//=======================================================================

inline GeomAbs_SurfaceType GeomAdaptor_Surface::GetType() const {
  return mySurfaceType;
}
