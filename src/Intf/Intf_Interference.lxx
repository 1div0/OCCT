// File:        Intf_Interference.lxx
// Created:     Mon Jun 24 11:52:34 1991
// Author:      Didier PIFFAULT

//=======================================================================
// Return the number of sections points in an interference.
//=======================================================================

inline Standard_Integer Intf_Interference::NbSectionPoints () const
{
  return mySPoins.Length();
}

//=======================================================================
// Give the section point of range Index in the interference.
//=======================================================================

inline const Intf_SectionPoint& Intf_Interference::PntValue (const Standard_Integer Index) const
{
  return mySPoins(Index);
}

//=======================================================================
// Return the number of sections lines in an interference.
//=======================================================================

inline Standard_Integer Intf_Interference::NbSectionLines () const
{
  return mySLines.Length();
}

//=======================================================================
// Give the section line of range Index in the interference.
//=======================================================================

inline const Intf_SectionLine& Intf_Interference::LineValue (const Standard_Integer Index) const
{
  return mySLines(Index);
}

//=======================================================================
// Return the number of sections TangentZones in an interference.
//=======================================================================

inline Standard_Integer Intf_Interference::NbTangentZones () const
{
  return myTZones.Length();
}

//=======================================================================
// Give the tangentzone of range Index in the interference.
//=======================================================================

inline const Intf_TangentZone& Intf_Interference::ZoneValue (const Standard_Integer Index) const
{
  return myTZones(Index);
}

//=======================================================================
//function : GetTolerance
//purpose  : 
//=======================================================================

inline Standard_Real Intf_Interference::GetTolerance () const
{
  return Tolerance;
}
